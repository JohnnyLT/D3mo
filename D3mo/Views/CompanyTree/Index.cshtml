@section localStyles
{
    <style type="text/css">
        svg {
            background-color: #4DBCE9;
            border-radius: 5px;
        }

        circle.demo {
            fill: #ffffff;
            stroke-width: 3;
            stroke: #000000;
        }
    </style>
}

<div class="jumbotron">
    <h2>SVG</h2>
    <p>

    </p>
</div>


<div class="row">
    <div class="col-md-12">
        <svg viewBox="0 0 960 540" width="100%" height="100%"></svg>
    </div>
</div>
<br />

@section scripts
{
    <script type="text/javascript">
        var hDepth = {},

            getHDepth = function(employeeId, coachId, people) {
                var depth;

                if (people === undefined) {
                    return 0;
                }

                if (people[employeeId] !== undefined) {
                    return people[employeeId];
                }

                if (people[coachId] === undefined) {
                    people[coachId] = 0;
                    people[employeeId] = 1;
                }

                depth = 1 + getHDepth(coachId, null, people);
                hDepth[employeeId] = depth;
                return depth;
            },

            getLevelCalculator = function() {
                var levels = {};
                return function(depth) {
                    if (levels[depth] === undefined) {
                        levels[depth] = 0;
                    } else {
                        levels[depth]++;
                    }
                    return levels[depth];
                };
            },

            buildTree = function() {
                var svg = d3.select('svg');


                var treeChart = d3.layout.tree();
                treeChart
                    .size([500, 500])
                    .children(function(d) { return d; });

                d3.json('api2/EmployeeCoaches',
                    function(error, data) {

                        var linkGenerator = d3.svg.diagonal();
                        var calculateDepthLevel = getLevelCalculator();

                        var x = treeChart(data)[0];
                        d3.select('svg')
                            .append('g')
                            .attr('id', 'treeG')
                            .selectAll('g')
                            .data(x)
                            .enter()
                            .append('g')
                            .attr('class', 'node')
                            .attr('transform', function(d) {
                                var depth = getHDepth(d.employee.id, d.coach.id, hDepth),
                                    xPos = 10 + depth * 50,
                                    yPos;
                                
                                yPos = 50 + 20 * calculateDepthLevel(depth);

                                return 'translate(' + xPos + ',' + yPos + ')';
                            });

                        d3.selectAll('g.node')
                            .append('circle')
                            .attr('r', 6)
                            .style('fill', function(d) { return 'white'; })
                            .style('stroke', 'black')
                            .style('stroke-width', '1.5px');
                    });
            };

        $('document').ready(function() {
            buildTree();
        });
    </script>
}
